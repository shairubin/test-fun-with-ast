# DO NOT EDIT! This file was generated by jschema_to_python version 0.0.1.dev29,
# with extension for dataclasses and type annotation.

from __future__ import annotations

import dataclasses
from typing import Any, List, Literal, Optional

from torch.onnx._internal.diagnostics.infra.sarif import (
    _artifact_content,
    _artifact_location,
    _message,
    _property_bag,
)


@dataclasses.dataclass
class Artifact(object):
    """A single artifact. In some cases, this artifact might be nested within another artifact."""

    contents: Optional[_artifact_content.ArtifactContent] = dataclasses.field(
        default=None, metadata={"schema_property_name": "contents"}
    )
    roles: Optional[
        List[
            Literal[
                "userSpecifiedConfiguration",
                "toolSpecifiedConfiguration",
                "debugOutputFile",
            ]
        ]
    ] = dataclasses.field(default=None, metadata={"schema_property_name": "roles"})
    source_language: Optional[str] = dataclasses.field(
        default=None, metadata={"schema_property_name": "sourceLanguage"}
    )


# flake8: noqa
